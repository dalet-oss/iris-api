// Code generated by go-swagger; DO NOT EDIT.

package dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DisableDNSZoneRecordReader is a Reader for the DisableDNSZoneRecord structure.
type DisableDNSZoneRecordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableDNSZoneRecordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDisableDNSZoneRecordCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewDisableDNSZoneRecordConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisableDNSZoneRecordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDisableDNSZoneRecordCreated creates a DisableDNSZoneRecordCreated with default headers values
func NewDisableDNSZoneRecordCreated() *DisableDNSZoneRecordCreated {
	return &DisableDNSZoneRecordCreated{}
}

/*
DisableDNSZoneRecordCreated describes a response with status code 201, with default header values.

The DNS zone's record has been disabled.
*/
type DisableDNSZoneRecordCreated struct {
}

// IsSuccess returns true when this disable Dns zone record created response has a 2xx status code
func (o *DisableDNSZoneRecordCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable Dns zone record created response has a 3xx status code
func (o *DisableDNSZoneRecordCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable Dns zone record created response has a 4xx status code
func (o *DisableDNSZoneRecordCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable Dns zone record created response has a 5xx status code
func (o *DisableDNSZoneRecordCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this disable Dns zone record created response a status code equal to that given
func (o *DisableDNSZoneRecordCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the disable Dns zone record created response
func (o *DisableDNSZoneRecordCreated) Code() int {
	return 201
}

func (o *DisableDNSZoneRecordCreated) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordCreated ", 201)
}

func (o *DisableDNSZoneRecordCreated) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordCreated ", 201)
}

func (o *DisableDNSZoneRecordCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableDNSZoneRecordConflict creates a DisableDNSZoneRecordConflict with default headers values
func NewDisableDNSZoneRecordConflict() *DisableDNSZoneRecordConflict {
	return &DisableDNSZoneRecordConflict{}
}

/*
DisableDNSZoneRecordConflict describes a response with status code 409, with default header values.

The DNS zone's record was already disable.
*/
type DisableDNSZoneRecordConflict struct {
}

// IsSuccess returns true when this disable Dns zone record conflict response has a 2xx status code
func (o *DisableDNSZoneRecordConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable Dns zone record conflict response has a 3xx status code
func (o *DisableDNSZoneRecordConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable Dns zone record conflict response has a 4xx status code
func (o *DisableDNSZoneRecordConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable Dns zone record conflict response has a 5xx status code
func (o *DisableDNSZoneRecordConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this disable Dns zone record conflict response a status code equal to that given
func (o *DisableDNSZoneRecordConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the disable Dns zone record conflict response
func (o *DisableDNSZoneRecordConflict) Code() int {
	return 409
}

func (o *DisableDNSZoneRecordConflict) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordConflict ", 409)
}

func (o *DisableDNSZoneRecordConflict) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordConflict ", 409)
}

func (o *DisableDNSZoneRecordConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableDNSZoneRecordInternalServerError creates a DisableDNSZoneRecordInternalServerError with default headers values
func NewDisableDNSZoneRecordInternalServerError() *DisableDNSZoneRecordInternalServerError {
	return &DisableDNSZoneRecordInternalServerError{}
}

/*
DisableDNSZoneRecordInternalServerError describes a response with status code 500, with default header values.

Unable to disable the DNS zone's record.
*/
type DisableDNSZoneRecordInternalServerError struct {
}

// IsSuccess returns true when this disable Dns zone record internal server error response has a 2xx status code
func (o *DisableDNSZoneRecordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable Dns zone record internal server error response has a 3xx status code
func (o *DisableDNSZoneRecordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable Dns zone record internal server error response has a 4xx status code
func (o *DisableDNSZoneRecordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable Dns zone record internal server error response has a 5xx status code
func (o *DisableDNSZoneRecordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this disable Dns zone record internal server error response a status code equal to that given
func (o *DisableDNSZoneRecordInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the disable Dns zone record internal server error response
func (o *DisableDNSZoneRecordInternalServerError) Code() int {
	return 500
}

func (o *DisableDNSZoneRecordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordInternalServerError ", 500)
}

func (o *DisableDNSZoneRecordInternalServerError) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record/{recordId}/disable][%d] disableDnsZoneRecordInternalServerError ", 500)
}

func (o *DisableDNSZoneRecordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
