// Code generated by go-swagger; DO NOT EDIT.

package dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/iris-api/models"
)

// UpdateDNSZoneReader is a Reader for the UpdateDNSZone structure.
type UpdateDNSZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDNSZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDNSZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDNSZoneBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDNSZoneNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDNSZoneInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateDNSZoneOK creates a UpdateDNSZoneOK with default headers values
func NewUpdateDNSZoneOK() *UpdateDNSZoneOK {
	return &UpdateDNSZoneOK{}
}

/*
UpdateDNSZoneOK describes a response with status code 200, with default header values.

Returns the updated zone object.
*/
type UpdateDNSZoneOK struct {
	Payload *models.Zone
}

// IsSuccess returns true when this update Dns zone o k response has a 2xx status code
func (o *UpdateDNSZoneOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update Dns zone o k response has a 3xx status code
func (o *UpdateDNSZoneOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Dns zone o k response has a 4xx status code
func (o *UpdateDNSZoneOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update Dns zone o k response has a 5xx status code
func (o *UpdateDNSZoneOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update Dns zone o k response a status code equal to that given
func (o *UpdateDNSZoneOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update Dns zone o k response
func (o *UpdateDNSZoneOK) Code() int {
	return 200
}

func (o *UpdateDNSZoneOK) Error() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneOK  %+v", 200, o.Payload)
}

func (o *UpdateDNSZoneOK) String() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneOK  %+v", 200, o.Payload)
}

func (o *UpdateDNSZoneOK) GetPayload() *models.Zone {
	return o.Payload
}

func (o *UpdateDNSZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDNSZoneBadRequest creates a UpdateDNSZoneBadRequest with default headers values
func NewUpdateDNSZoneBadRequest() *UpdateDNSZoneBadRequest {
	return &UpdateDNSZoneBadRequest{}
}

/*
UpdateDNSZoneBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type UpdateDNSZoneBadRequest struct {
}

// IsSuccess returns true when this update Dns zone bad request response has a 2xx status code
func (o *UpdateDNSZoneBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update Dns zone bad request response has a 3xx status code
func (o *UpdateDNSZoneBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Dns zone bad request response has a 4xx status code
func (o *UpdateDNSZoneBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update Dns zone bad request response has a 5xx status code
func (o *UpdateDNSZoneBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update Dns zone bad request response a status code equal to that given
func (o *UpdateDNSZoneBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update Dns zone bad request response
func (o *UpdateDNSZoneBadRequest) Code() int {
	return 400
}

func (o *UpdateDNSZoneBadRequest) Error() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneBadRequest ", 400)
}

func (o *UpdateDNSZoneBadRequest) String() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneBadRequest ", 400)
}

func (o *UpdateDNSZoneBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDNSZoneNotFound creates a UpdateDNSZoneNotFound with default headers values
func NewUpdateDNSZoneNotFound() *UpdateDNSZoneNotFound {
	return &UpdateDNSZoneNotFound{}
}

/*
UpdateDNSZoneNotFound describes a response with status code 404, with default header values.

Invalid zone ID was provided.
*/
type UpdateDNSZoneNotFound struct {
}

// IsSuccess returns true when this update Dns zone not found response has a 2xx status code
func (o *UpdateDNSZoneNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update Dns zone not found response has a 3xx status code
func (o *UpdateDNSZoneNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Dns zone not found response has a 4xx status code
func (o *UpdateDNSZoneNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update Dns zone not found response has a 5xx status code
func (o *UpdateDNSZoneNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update Dns zone not found response a status code equal to that given
func (o *UpdateDNSZoneNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update Dns zone not found response
func (o *UpdateDNSZoneNotFound) Code() int {
	return 404
}

func (o *UpdateDNSZoneNotFound) Error() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneNotFound ", 404)
}

func (o *UpdateDNSZoneNotFound) String() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneNotFound ", 404)
}

func (o *UpdateDNSZoneNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDNSZoneInternalServerError creates a UpdateDNSZoneInternalServerError with default headers values
func NewUpdateDNSZoneInternalServerError() *UpdateDNSZoneInternalServerError {
	return &UpdateDNSZoneInternalServerError{}
}

/*
UpdateDNSZoneInternalServerError describes a response with status code 500, with default header values.

Unable to update zone.
*/
type UpdateDNSZoneInternalServerError struct {
}

// IsSuccess returns true when this update Dns zone internal server error response has a 2xx status code
func (o *UpdateDNSZoneInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update Dns zone internal server error response has a 3xx status code
func (o *UpdateDNSZoneInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update Dns zone internal server error response has a 4xx status code
func (o *UpdateDNSZoneInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update Dns zone internal server error response has a 5xx status code
func (o *UpdateDNSZoneInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update Dns zone internal server error response a status code equal to that given
func (o *UpdateDNSZoneInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update Dns zone internal server error response
func (o *UpdateDNSZoneInternalServerError) Code() int {
	return 500
}

func (o *UpdateDNSZoneInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneInternalServerError ", 500)
}

func (o *UpdateDNSZoneInternalServerError) String() string {
	return fmt.Sprintf("[PUT /dns/zone/{zoneId}][%d] updateDnsZoneInternalServerError ", 500)
}

func (o *UpdateDNSZoneInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
