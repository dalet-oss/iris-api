// Code generated by go-swagger; DO NOT EDIT.

package dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/iris-api/models"
)

// GetDNSZoneReader is a Reader for the GetDNSZone structure.
type GetDNSZoneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDNSZoneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDNSZoneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDNSZoneNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDNSZoneOK creates a GetDNSZoneOK with default headers values
func NewGetDNSZoneOK() *GetDNSZoneOK {
	return &GetDNSZoneOK{}
}

/*
GetDNSZoneOK describes a response with status code 200, with default header values.

Returns the DNS Zone object.
*/
type GetDNSZoneOK struct {
	Payload *models.Zone
}

// IsSuccess returns true when this get Dns zone o k response has a 2xx status code
func (o *GetDNSZoneOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get Dns zone o k response has a 3xx status code
func (o *GetDNSZoneOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Dns zone o k response has a 4xx status code
func (o *GetDNSZoneOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get Dns zone o k response has a 5xx status code
func (o *GetDNSZoneOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get Dns zone o k response a status code equal to that given
func (o *GetDNSZoneOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get Dns zone o k response
func (o *GetDNSZoneOK) Code() int {
	return 200
}

func (o *GetDNSZoneOK) Error() string {
	return fmt.Sprintf("[GET /dns/zone/{zoneId}][%d] getDnsZoneOK  %+v", 200, o.Payload)
}

func (o *GetDNSZoneOK) String() string {
	return fmt.Sprintf("[GET /dns/zone/{zoneId}][%d] getDnsZoneOK  %+v", 200, o.Payload)
}

func (o *GetDNSZoneOK) GetPayload() *models.Zone {
	return o.Payload
}

func (o *GetDNSZoneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Zone)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDNSZoneNotFound creates a GetDNSZoneNotFound with default headers values
func NewGetDNSZoneNotFound() *GetDNSZoneNotFound {
	return &GetDNSZoneNotFound{}
}

/*
GetDNSZoneNotFound describes a response with status code 404, with default header values.

Invalid zone ID was provided.
*/
type GetDNSZoneNotFound struct {
}

// IsSuccess returns true when this get Dns zone not found response has a 2xx status code
func (o *GetDNSZoneNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get Dns zone not found response has a 3xx status code
func (o *GetDNSZoneNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get Dns zone not found response has a 4xx status code
func (o *GetDNSZoneNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get Dns zone not found response has a 5xx status code
func (o *GetDNSZoneNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get Dns zone not found response a status code equal to that given
func (o *GetDNSZoneNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get Dns zone not found response
func (o *GetDNSZoneNotFound) Code() int {
	return 404
}

func (o *GetDNSZoneNotFound) Error() string {
	return fmt.Sprintf("[GET /dns/zone/{zoneId}][%d] getDnsZoneNotFound ", 404)
}

func (o *GetDNSZoneNotFound) String() string {
	return fmt.Sprintf("[GET /dns/zone/{zoneId}][%d] getDnsZoneNotFound ", 404)
}

func (o *GetDNSZoneNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
