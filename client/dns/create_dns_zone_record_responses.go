// Code generated by go-swagger; DO NOT EDIT.

package dns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/iris-api/models"
)

// CreateDNSZoneRecordReader is a Reader for the CreateDNSZoneRecord structure.
type CreateDNSZoneRecordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDNSZoneRecordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDNSZoneRecordCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDNSZoneRecordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateDNSZoneRecordConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDNSZoneRecordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDNSZoneRecordCreated creates a CreateDNSZoneRecordCreated with default headers values
func NewCreateDNSZoneRecordCreated() *CreateDNSZoneRecordCreated {
	return &CreateDNSZoneRecordCreated{}
}

/*
CreateDNSZoneRecordCreated describes a response with status code 201, with default header values.

Returns the newly created zone's record object.
*/
type CreateDNSZoneRecordCreated struct {
	Payload *models.Record
}

// IsSuccess returns true when this create Dns zone record created response has a 2xx status code
func (o *CreateDNSZoneRecordCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Dns zone record created response has a 3xx status code
func (o *CreateDNSZoneRecordCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Dns zone record created response has a 4xx status code
func (o *CreateDNSZoneRecordCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Dns zone record created response has a 5xx status code
func (o *CreateDNSZoneRecordCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create Dns zone record created response a status code equal to that given
func (o *CreateDNSZoneRecordCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create Dns zone record created response
func (o *CreateDNSZoneRecordCreated) Code() int {
	return 201
}

func (o *CreateDNSZoneRecordCreated) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordCreated  %+v", 201, o.Payload)
}

func (o *CreateDNSZoneRecordCreated) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordCreated  %+v", 201, o.Payload)
}

func (o *CreateDNSZoneRecordCreated) GetPayload() *models.Record {
	return o.Payload
}

func (o *CreateDNSZoneRecordCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Record)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDNSZoneRecordBadRequest creates a CreateDNSZoneRecordBadRequest with default headers values
func NewCreateDNSZoneRecordBadRequest() *CreateDNSZoneRecordBadRequest {
	return &CreateDNSZoneRecordBadRequest{}
}

/*
CreateDNSZoneRecordBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateDNSZoneRecordBadRequest struct {
}

// IsSuccess returns true when this create Dns zone record bad request response has a 2xx status code
func (o *CreateDNSZoneRecordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Dns zone record bad request response has a 3xx status code
func (o *CreateDNSZoneRecordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Dns zone record bad request response has a 4xx status code
func (o *CreateDNSZoneRecordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Dns zone record bad request response has a 5xx status code
func (o *CreateDNSZoneRecordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create Dns zone record bad request response a status code equal to that given
func (o *CreateDNSZoneRecordBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create Dns zone record bad request response
func (o *CreateDNSZoneRecordBadRequest) Code() int {
	return 400
}

func (o *CreateDNSZoneRecordBadRequest) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordBadRequest ", 400)
}

func (o *CreateDNSZoneRecordBadRequest) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordBadRequest ", 400)
}

func (o *CreateDNSZoneRecordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDNSZoneRecordConflict creates a CreateDNSZoneRecordConflict with default headers values
func NewCreateDNSZoneRecordConflict() *CreateDNSZoneRecordConflict {
	return &CreateDNSZoneRecordConflict{}
}

/*
CreateDNSZoneRecordConflict describes a response with status code 409, with default header values.

Zone's record already exists.
*/
type CreateDNSZoneRecordConflict struct {
}

// IsSuccess returns true when this create Dns zone record conflict response has a 2xx status code
func (o *CreateDNSZoneRecordConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Dns zone record conflict response has a 3xx status code
func (o *CreateDNSZoneRecordConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Dns zone record conflict response has a 4xx status code
func (o *CreateDNSZoneRecordConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Dns zone record conflict response has a 5xx status code
func (o *CreateDNSZoneRecordConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create Dns zone record conflict response a status code equal to that given
func (o *CreateDNSZoneRecordConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create Dns zone record conflict response
func (o *CreateDNSZoneRecordConflict) Code() int {
	return 409
}

func (o *CreateDNSZoneRecordConflict) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordConflict ", 409)
}

func (o *CreateDNSZoneRecordConflict) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordConflict ", 409)
}

func (o *CreateDNSZoneRecordConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDNSZoneRecordInternalServerError creates a CreateDNSZoneRecordInternalServerError with default headers values
func NewCreateDNSZoneRecordInternalServerError() *CreateDNSZoneRecordInternalServerError {
	return &CreateDNSZoneRecordInternalServerError{}
}

/*
CreateDNSZoneRecordInternalServerError describes a response with status code 500, with default header values.

Unable to create zone's record.
*/
type CreateDNSZoneRecordInternalServerError struct {
}

// IsSuccess returns true when this create Dns zone record internal server error response has a 2xx status code
func (o *CreateDNSZoneRecordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Dns zone record internal server error response has a 3xx status code
func (o *CreateDNSZoneRecordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Dns zone record internal server error response has a 4xx status code
func (o *CreateDNSZoneRecordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Dns zone record internal server error response has a 5xx status code
func (o *CreateDNSZoneRecordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create Dns zone record internal server error response a status code equal to that given
func (o *CreateDNSZoneRecordInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create Dns zone record internal server error response
func (o *CreateDNSZoneRecordInternalServerError) Code() int {
	return 500
}

func (o *CreateDNSZoneRecordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordInternalServerError ", 500)
}

func (o *CreateDNSZoneRecordInternalServerError) String() string {
	return fmt.Sprintf("[POST /dns/zone/{zoneId}/record][%d] createDnsZoneRecordInternalServerError ", 500)
}

func (o *CreateDNSZoneRecordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
