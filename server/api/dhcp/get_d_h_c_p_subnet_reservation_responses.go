// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dalet-oss/iris-api/models"
)

// GetDHCPSubnetReservationOKCode is the HTTP code returned for type GetDHCPSubnetReservationOK
const GetDHCPSubnetReservationOKCode int = 200

/*
GetDHCPSubnetReservationOK Returns the DHCP Reservation object.

swagger:response getDHCPSubnetReservationOK
*/
type GetDHCPSubnetReservationOK struct {

	/*
	  In: Body
	*/
	Payload *models.Reservation `json:"body,omitempty"`
}

// NewGetDHCPSubnetReservationOK creates GetDHCPSubnetReservationOK with default headers values
func NewGetDHCPSubnetReservationOK() *GetDHCPSubnetReservationOK {

	return &GetDHCPSubnetReservationOK{}
}

// WithPayload adds the payload to the get d h c p subnet reservation o k response
func (o *GetDHCPSubnetReservationOK) WithPayload(payload *models.Reservation) *GetDHCPSubnetReservationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get d h c p subnet reservation o k response
func (o *GetDHCPSubnetReservationOK) SetPayload(payload *models.Reservation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDHCPSubnetReservationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDHCPSubnetReservationNotFoundCode is the HTTP code returned for type GetDHCPSubnetReservationNotFound
const GetDHCPSubnetReservationNotFoundCode int = 404

/*
GetDHCPSubnetReservationNotFound Invalid subnet ID or reservation MAC address was provided.

swagger:response getDHCPSubnetReservationNotFound
*/
type GetDHCPSubnetReservationNotFound struct {
}

// NewGetDHCPSubnetReservationNotFound creates GetDHCPSubnetReservationNotFound with default headers values
func NewGetDHCPSubnetReservationNotFound() *GetDHCPSubnetReservationNotFound {

	return &GetDHCPSubnetReservationNotFound{}
}

// WriteResponse to the client
func (o *GetDHCPSubnetReservationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
