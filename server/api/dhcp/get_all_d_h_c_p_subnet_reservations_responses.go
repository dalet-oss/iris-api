// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetAllDHCPSubnetReservationsOKCode is the HTTP code returned for type GetAllDHCPSubnetReservationsOK
const GetAllDHCPSubnetReservationsOKCode int = 200

/*
GetAllDHCPSubnetReservationsOK Returns the an array of subnet's reserved MAC addresses.

swagger:response getAllDHCPSubnetReservationsOK
*/
type GetAllDHCPSubnetReservationsOK struct {

	/*
	  In: Body
	*/
	Payload []string `json:"body,omitempty"`
}

// NewGetAllDHCPSubnetReservationsOK creates GetAllDHCPSubnetReservationsOK with default headers values
func NewGetAllDHCPSubnetReservationsOK() *GetAllDHCPSubnetReservationsOK {

	return &GetAllDHCPSubnetReservationsOK{}
}

// WithPayload adds the payload to the get all d h c p subnet reservations o k response
func (o *GetAllDHCPSubnetReservationsOK) WithPayload(payload []string) *GetAllDHCPSubnetReservationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all d h c p subnet reservations o k response
func (o *GetAllDHCPSubnetReservationsOK) SetPayload(payload []string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllDHCPSubnetReservationsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]string, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllDHCPSubnetReservationsNotFoundCode is the HTTP code returned for type GetAllDHCPSubnetReservationsNotFound
const GetAllDHCPSubnetReservationsNotFoundCode int = 404

/*
GetAllDHCPSubnetReservationsNotFound Invalid subnet ID was provided.

swagger:response getAllDHCPSubnetReservationsNotFound
*/
type GetAllDHCPSubnetReservationsNotFound struct {
}

// NewGetAllDHCPSubnetReservationsNotFound creates GetAllDHCPSubnetReservationsNotFound with default headers values
func NewGetAllDHCPSubnetReservationsNotFound() *GetAllDHCPSubnetReservationsNotFound {

	return &GetAllDHCPSubnetReservationsNotFound{}
}

// WriteResponse to the client
func (o *GetAllDHCPSubnetReservationsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
