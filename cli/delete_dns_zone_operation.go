// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/dalet-oss/iris-api/client/dns"

	"github.com/spf13/cobra"
)

// makeOperationDNSDeleteDNSZoneCmd returns a cmd to handle operation deleteDnsZone
func makeOperationDNSDeleteDNSZoneCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "DeleteDNSZone",
		Short: `Deletes an existing zone.`,
		RunE:  runOperationDNSDeleteDNSZone,
	}

	if err := registerOperationDNSDeleteDNSZoneParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationDNSDeleteDNSZone uses cmd flags to call endpoint api
func runOperationDNSDeleteDNSZone(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := dns.NewDeleteDNSZoneParams()
	if err, _ := retrieveOperationDNSDeleteDNSZoneZoneIDFlag(params, "", cmd); err != nil {
		return err
	}
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationDNSDeleteDNSZoneResult(appCli.DNS.DeleteDNSZone(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationDNSDeleteDNSZoneParamFlags registers all flags needed to fill params
func registerOperationDNSDeleteDNSZoneParamFlags(cmd *cobra.Command) error {
	if err := registerOperationDNSDeleteDNSZoneZoneIDParamFlags("", cmd); err != nil {
		return err
	}
	return nil
}

func registerOperationDNSDeleteDNSZoneZoneIDParamFlags(cmdPrefix string, cmd *cobra.Command) error {

	zoneIdDescription := `Required. The ID of the zone to delete.`

	var zoneIdFlagName string
	if cmdPrefix == "" {
		zoneIdFlagName = "zoneId"
	} else {
		zoneIdFlagName = fmt.Sprintf("%v.zoneId", cmdPrefix)
	}

	var zoneIdFlagDefault string

	_ = cmd.PersistentFlags().String(zoneIdFlagName, zoneIdFlagDefault, zoneIdDescription)

	return nil
}

func retrieveOperationDNSDeleteDNSZoneZoneIDFlag(m *dns.DeleteDNSZoneParams, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	if cmd.Flags().Changed("zoneId") {

		var zoneIdFlagName string
		if cmdPrefix == "" {
			zoneIdFlagName = "zoneId"
		} else {
			zoneIdFlagName = fmt.Sprintf("%v.zoneId", cmdPrefix)
		}

		zoneIdFlagValue, err := cmd.Flags().GetString(zoneIdFlagName)
		if err != nil {
			return err, false
		}
		m.ZoneID = zoneIdFlagValue

	}
	return nil, retAdded
}

// parseOperationDNSDeleteDNSZoneResult parses request result and return the string content
func parseOperationDNSDeleteDNSZoneResult(resp0 *dns.DeleteDNSZoneOK, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning deleteDnsZoneOK is not supported

		// Non schema case: warning deleteDnsZoneNotFound is not supported

		// Non schema case: warning deleteDnsZoneConflict is not supported

		// Non schema case: warning deleteDnsZoneInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response deleteDnsZoneOK is not supported by go-swagger cli yet.

	return "", nil
}
