// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/dalet-oss/iris-api/client/dhcp"

	"github.com/spf13/cobra"
)

// makeOperationDhcpReloadDHCPCmd returns a cmd to handle operation reloadDHCP
func makeOperationDhcpReloadDHCPCmd() (*cobra.Command, error) {
	cmd := &cobra.Command{
		Use:   "ReloadDHCP",
		Short: `Reload the DHCPv4 service configuration.`,
		RunE:  runOperationDhcpReloadDHCP,
	}

	if err := registerOperationDhcpReloadDHCPParamFlags(cmd); err != nil {
		return nil, err
	}

	return cmd, nil
}

// runOperationDhcpReloadDHCP uses cmd flags to call endpoint api
func runOperationDhcpReloadDHCP(cmd *cobra.Command, args []string) error {
	appCli, err := makeClient(cmd, args)
	if err != nil {
		return err
	}
	// retrieve flag values from cmd and fill params
	params := dhcp.NewReloadDHCPParams()
	if dryRun {

		logDebugf("dry-run flag specified. Skip sending request.")
		return nil
	}
	// make request and then print result
	msgStr, err := parseOperationDhcpReloadDHCPResult(appCli.Dhcp.ReloadDHCP(params, nil))
	if err != nil {
		return err
	}
	if !debug {

		fmt.Println(msgStr)
	}
	return nil
}

// registerOperationDhcpReloadDHCPParamFlags registers all flags needed to fill params
func registerOperationDhcpReloadDHCPParamFlags(cmd *cobra.Command) error {
	return nil
}

// parseOperationDhcpReloadDHCPResult parses request result and return the string content
func parseOperationDhcpReloadDHCPResult(resp0 *dhcp.ReloadDHCPCreated, respErr error) (string, error) {
	if respErr != nil {

		// Non schema case: warning reloadDHCPCreated is not supported

		// Non schema case: warning reloadDHCPInternalServerError is not supported

		return "", respErr
	}

	// warning: non schema response reloadDHCPCreated is not supported by go-swagger cli yet.

	return "", nil
}
